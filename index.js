// ---------------- WhatsApp (Baileys) ----------------
async function startWhatsApp({ reset = false } = {}) {
  const { state, saveCreds } = await useMultiFileAuthState('auth_info')

  sock = makeWASocket({
    auth: state,
    browser: Browsers.appropriate('Render', 'Chrome'),
  })

  sock.ev.on('creds.update', saveCreds)

  sock.ev.on('connection.update', (update) => {
    const { connection, qr } = update

    if (qr && !currentQR) { // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º QR —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ–≥–æ –µ—â—ë –Ω–µ—Ç
      console.log('üì± –ù–æ–≤—ã–π QR –ø–æ–ª—É—á–µ–Ω')
      currentQR = qr
      qrcode.generate(qr, { small: true }) // –ª–æ–∫–∞–ª—å–Ω—ã–π ASCII
      console.log(`üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–µ–±-QR: https://tg-wa-bridge.onrender.com/wa/qr`)
    }

    if (connection === 'open') {
      console.log('‚úÖ WhatsApp –ø–æ–¥–∫–ª—é—á—ë–Ω')
      currentQR = null // QR –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω
      cacheGroupJid()
    }

    if (connection === 'close') {
      console.log('‚ùå WhatsApp –æ—Ç–∫–ª—é—á—ë–Ω, –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...')
      setTimeout(startWhatsApp, 5000)
    }
  })

  if (reset) {
    console.log('‚ôªÔ∏è –°–±—Ä–æ—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ WhatsApp ‚Äî –∂–¥–∏—Ç–µ –Ω–æ–≤—ã–π QR...')
    currentQR = null
  }
}
