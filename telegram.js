import { TelegramClient } from 'telegram'
import { StringSession } from 'telegram/sessions/index.js'
import { NewMessage } from 'telegram/events/index.js'
import {
  TELEGRAM_API_ID,
  TELEGRAM_API_HASH,
  TELEGRAM_STRING_SESSION,
  TELEGRAM_SOURCE
} from './config.js'
import { infoLog, warnLog, errorLog } from './logger.js'
import { sendToWhatsApp } from './whatsapp.js'

export let tgClient = null

// === –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ TG ===
export async function sendTelegramNotification(text) {
  try {
    if (!tgClient) {
      warnLog('‚ö†Ô∏è TG client –Ω–µ –ø–æ–¥–∫–ª—é—á—ë–Ω ‚Äî —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
      return
    }
    if (!TELEGRAM_SOURCE) {
      warnLog('‚ö†Ô∏è TELEGRAM_SOURCE –Ω–µ —É–∫–∞–∑–∞–Ω ‚Äî —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
      return
    }
    const chatId = TELEGRAM_SOURCE.startsWith('-') ? TELEGRAM_SOURCE : '@' + TELEGRAM_SOURCE
    await tgClient.sendMessage(chatId, { message: String(text) })
    infoLog('‚û°Ô∏è –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ TG: ' + String(text).slice(0, 200))
  } catch (e) {
    errorLog('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ TG: ' + (e?.message || e))
  }
}

// === –°—Ç–∞—Ä—Ç TG ===
export async function startTelegram() {
  try {
    infoLog('üöÄ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...')
    tgClient = new TelegramClient(
      new StringSession(TELEGRAM_STRING_SESSION || ''),
      Number(TELEGRAM_API_ID),
      TELEGRAM_API_HASH,
      { connectionRetries: 5 }
    )
    await tgClient.connect()
    infoLog('‚úÖ Telegram –ø–æ–¥–∫–ª—é—á—ë–Ω')

    // –í–µ—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    tgClient.addEventHandler(onTelegramMessage, new NewMessage({}))
  } catch (e) {
    errorLog('‚ùå –û—à–∏–±–∫–∞ Telegram: ' + (e?.message || e))
    tgClient = null
  }
}

// === –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ===
async function onTelegramMessage(event) {
  try {
    const message = event.message
    if (!message) return

    const sender = await message.getSender().catch(() => null)
    const senderIdStr = sender?.id ? String(sender.id) : ''
    const senderUsername = sender?.username ? ('' + sender.username).replace(/^@/, '').toLowerCase() : ''

    const source = (TELEGRAM_SOURCE || '').toString().replace(/^@/, '').toLowerCase()
    const isFromSource =
      source &&
      (senderUsername === source || senderIdStr === source || ('-' + senderIdStr) === source)

    let text = null
    if (message.message && typeof message.message === 'string') text = message.message

    if (isFromSource && text && String(text).trim()) {
      infoLog('‚úâÔ∏è –ü–æ–ª—É—á–µ–Ω–æ –∏–∑ TG: ' + String(text).slice(0, 200))
      await sendToWhatsApp(String(text))
    }
  } catch (e) {
    errorLog('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ TG event: ' + (e?.message || e))
  }
}
